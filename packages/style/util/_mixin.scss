// // ==========(flex)==========
%flex {
	display: flex;
}
// for flex direction
%direction-row {
	flex-direction: row;
}
%direction-row-reverse {
	flex-direction: row-reverse;
}
%direction-column {
	flex-direction: column;
}
%direction-column-reverse {
	flex-direction: column-reverse;
}
// for justify
%justify-center {
	justify-content: center;
}
%justify-flex-start {
	justify-content: flex-start;
}
%justify-flex-end {
	justify-content: flex-end;
}
%justify-space-around {
	justify-content: space-around;
}
%justify-space-between {
	justify-content: space-between;
}
%justify-space-evenly {
	justify-content: space-evenly;
}
// for align
%align-center {
	align-items: center;
}
%align-flex-start {
	align-items: flex-start;
}
%align-flex-end {
	align-items: flex-end;
}

@mixin flex($direction, $justify, $align) {
	@extend %flex;

	// for flex direction
	@if $direction == "r" {
		@extend %direction-row;
	} @else if $direction == "rr" {
		@extend %direction-row-reverse;
	} @else if $direction == "c" {
		@extend %direction-column;
	} @else if $direction == "cr" {
		@extend %direction-column-reverse;
	} @else {
	}

	// for justify
	@if $justify == "c" {
		@extend %justify-center;
	} @else if $justify == "fs" {
		@extend %justify-flex-start;
	} @else if $justify == "fe" {
		@extend %justify-flex-end;
	} @else if $justify == "sa" {
		@extend %justify-space-around;
	} @else if $justify == "sb" {
		@extend %justify-space-between;
	} @else if $justify == "se" {
		@extend %justify-space-evenly;
	} @else {
	}

	// for align
	@if $align == "c" {
		@extend %align-center;
	} @else if $align == "fs" {
		@extend %align-flex-start;
	} @else if $align == "fe" {
		@extend %align-flex-end;
	} @else {
	}
}

@mixin flexQueries($direction, $justify, $align) {
	display: flex !important;

	// for flex direction
	@if $direction == "r" {
		flex-direction: row !important;
	} @else if $direction == "rr" {
		flex-direction: row-reverse !important;
	} @else if $direction == "c" {
		flex-direction: column !important;
	} @else if $direction == "cr" {
		flex-direction: column-reverse !important;
	} @else {
	}

	// for justify
	@if $justify == "c" {
		justify-content: center !important;
	} @else if $justify == "fs" {
		justify-content: flex-start !important;
	} @else if $justify == "fe" {
		justify-content: flex-end !important;
	} @else if $justify == "sa" {
		justify-content: space-around !important;
	} @else if $justify == "sb" {
		justify-content: space-between !important;
	} @else if $justify == "se" {
		justify-content: space-evenly !important;
	} @else {
	}

	// for align
	@if $align == "c" {
		align-items: center !important;
	} @else if $align == "fs" {
		align-items: flex-start !important;
	} @else if $align == "fe" {
		align-items: flex-end !important;
	} @else {
	}
}

@mixin flexForPhon($column, $size) {
	@extend %flex;
	@extend %direction-row;

	> * {
		width: calc(100% / $size);
		height: 100%;
	}
	@media screen and (max-width: 769px) {
		& {
			@if $column == "c" {
				flex-direction: column;
			} @else if $column == "cr" {
				flex-direction: column-reverse;
			}
		}
		> * {
			width: 100%;
			height: calc(100% / $size);
		}
	}
}

// Put the number of rows, then the number of columns, then the type of size, then the gap
@mixin grid($rows, $columns, $size, $gap) {
	display: grid;
	@if $rows == "au" {
		grid-auto-flow: row;
	} @else {
		@if $rows == -1 {
		} @else {
			@if $size == "pr" {
				grid-template-rows: repeat($rows, 100% / $rows);
			}
			@if $size == "fr" {
				grid-template-rows: repeat($rows, 1fr);
			}
			@if $size == "au" {
				grid-template-rows: repeat($rows, auto);
			}
		}
	}

	@if $columns == "au" {
		grid-auto-flow: column;
	} @else {
		@if $columns == -1 {
		} @else if $columns == "au" {
			grid-auto-flow: column;
		} @else {
			@if $size == "pr" {
				grid-template-columns: repeat($columns, 100% / $columns);
			}
			@if $size == "fr" {
				grid-template-columns: repeat($columns, 1fr);
			}
			@if $size == "au" {
				grid-template-columns: repeat($columns, auto);
			}
		}
	}
	@if $gap == -1 {
	} @else {
		gap: $gap;
	}
}
